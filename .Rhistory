for (i in 1:(dim(survey)[2]) ) {
survey[,i] <- as.factor(survey[,i])
}
ca <- CA(input_data, ncp = 2, graph = FALSE)
mca <- MCA(input_data, ncp = 2, graph = FALSE)
fviz_mca_var(mca, choice = "mca.cor",
repel = TRUE, # Avoid text overlapping (slow)
ggtheme = theme_minimal())
mca_all <- MCA(survey, ncp = 2, graph = FALSE)
fviz_mca_var(mca_all, choice = "mca.cor",
repel = TRUE, # Avoid text overlapping (slow)
ggtheme = theme_minimal())
rm(mca_all)
rm(i)
input_cluster <- kmeans(input_data, 4, nstart = 20)
input_cluster <- kmeans(input_data, 3, nstart = 20)
input_cluster <- kmeans(input_data[, 1:2], 3, nstart = 20)
install.packages("clustMixType")
library(clustMixType)
input_cluster <- kproto(input_data, k = 3, nstart = 20)
?kmodes()
install.packages("klaR")
library(klaR)
input_cluster <- kmodes(input_data, k = 3, nstart = 20)
input_cluster <- kmodes(input_data, k = 3)
input_cluster <- kmodes(input_data, 3)
View(input_cluster)
input_cluster$cluster
input_cluster <- kmodes(input_data, 4)
input_cluster$cluster
View(input_data)
survey <- read.csv("kaggle_survey_2020_responses.csv")[-1, -1]
for (i in 1:(dim(survey)[2]) ) {
survey[,i] <- as.factor(survey[,i])
}
input_data <- survey %>%
dplyr::select(Q1, Q2, Q3, Q4, Q6, Q15)
mca <- MCA(input_data, ncp = 2, graph = FALSE)
fviz_mca_var(mca, choice = "mca.cor",
repel = TRUE, # Avoid text overlapping (slow)
ggtheme = theme_minimal())
rm(mca_test)
View(mca)
mca$ind$coord
input_cluster <- kmeans(mca$ind$coord, k = 3)
?kmeans
input_cluster <- kmeans(mca$ind$coord, centers = 3)
View(input_cluster)
kmeans <- kmeans(mca$ind$coord, centers = 3)
input_cluster <- cbind(input_data, kmeans)
input_cluster <- cbind(input_data, kmeans$cluster)
input_cluster <- cbind(input_data, mca$ind$coord, kmeans$cluster)
View(input_cluster)
ggplot(input_cluster, aes(x = "Dim 1", y = "Dim 2", color = kmeans$cluster)) + geom_point()
kmeans <- kmeans(mca$ind$coord, centers = 3)
cluster <- kmeans$cluster
input_cluster <- cbind(input_data, mca$ind$coord, cluster)
ggplot(input_cluster, aes(x = "Dim 1", y = "Dim 2", color = cluster)) + geom_point()
cluster <- as.factor(kmeans$cluster)
input_cluster <- cbind(input_data, mca$ind$coord, cluster)
ggplot(input_cluster, aes(x = "Dim 1", y = "Dim 2", color = cluster)) + geom_point()
ggplot(input_cluster, aes(`Dim 1`, `Dim 2`, color = cluster)) + geom_point()
mca <- MCA(input_data, ncp = 2, graph = FALSE)
fviz_mca_var(mca, choice = "mca.cor",
repel = TRUE, # Avoid text overlapping (slow)
ggtheme = theme_minimal())
input_data <- survey %>%
dplyr::select(Q1, Q2, Q4, Q6, Q15)
mca <- MCA(input_data, ncp = 2, graph = FALSE)
fviz_mca_var(mca, choice = "mca.cor",
repel = TRUE, # Avoid text overlapping (slow)
ggtheme = theme_minimal())
kmeans <- kmeans(mca$ind$coord, centers = 3)
cluster <- as.factor(kmeans$cluster)
input_cluster <- cbind(input_data, mca$ind$coord, cluster)
ggplot(input_cluster, aes(`Dim 1`, `Dim 2`, color = cluster)) + geom_point()
input_data <- survey %>%
dplyr::select(Q1, Q2, Q3, Q4, Q6, Q15)
kmeans <- kmeans(mca$ind$coord, centers = 3)
cluster <- as.factor(kmeans$cluster)
input_cluster <- cbind(input_data, mca$ind$coord, cluster)
ggplot(input_cluster, aes(`Dim 1`, `Dim 2`, color = cluster)) + geom_point()
mca <- MCA(input_data, ncp = 2, graph = FALSE)
fviz_mca_var(mca, choice = "mca.cor",
repel = TRUE, # Avoid text overlapping (slow)
ggtheme = theme_minimal())
kmeans <- kmeans(mca$ind$coord, centers = 3)
cluster <- as.factor(kmeans$cluster)
input_cluster <- cbind(input_data, mca$ind$coord, cluster)
ggplot(input_cluster, aes(`Dim 1`, `Dim 2`, color = cluster)) + geom_point()
kmeans <- kmeans(mca$ind$coord, centers = 4)
cluster <- as.factor(kmeans$cluster)
input_cluster <- cbind(input_data, mca$ind$coord, cluster)
ggplot(input_cluster, aes(`Dim 1`, `Dim 2`, color = cluster)) + geom_point()
kmeans <- kmeans(mca$ind$coord, centers = 5)
cluster <- as.factor(kmeans$cluster)
input_cluster <- cbind(input_data, mca$ind$coord, cluster)
ggplot(input_cluster, aes(`Dim 1`, `Dim 2`, color = cluster)) + geom_point()
kmeans <- kmeans(mca$ind$coord, centers = 4)
cluster <- as.factor(kmeans$cluster)
input_cluster <- cbind(input_data, mca$ind$coord, cluster)
ggplot(input_cluster, aes(`Dim 1`, `Dim 2`, color = cluster)) + geom_point()
kmeans <- kmeans(mca$ind$coord, centers = 4, nstart = 20)
cluster <- as.factor(kmeans$cluster)
input_cluster <- cbind(input_data, mca$ind$coord, cluster)
ggplot(input_cluster, aes(`Dim 1`, `Dim 2`, color = cluster)) + geom_point()
View(input_cluster)
?write.csv
write.csv(input_cluster, "cluster.csv")
?write.csv
setwd("~/Kaggle Survey 2020")
write.csv(input_cluster, "cluster.csv")
input_cluster %>%
group_by(cluster) %>%
summarise(age = mode(Q1))
input_cluster %>%
group_by(cluster) %>%
summarise(age = mode(as.numeric(Q1)))
input_cluster %>%
group_by(cluster) %>%
mutate(age = mode(as.numeric(Q1)))
input_cluster %>%
group_by(cluster) %>%
summarise(age = mode(as.numeric(Q1)))
input_cluster %>%
group_by(cluster) %>%
dplyr::summarise(age = mode(as.numeric(Q1)))
foo <- input_cluster
foo$Q1 <- as.numeric(foo$Q1)
foo %>%
group_by(cluster) %>%
dplyr::summarise(age = mode(Q1))
?summarize
mode(foo$Q1)
View(foo)
foo[1,1]
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
foo <- input_cluster
foo$Q1 <- as.numeric(foo$Q1)
foo %>%
group_by(cluster) %>%
dplyr::summarise(age = getmode(Q1))
foo <- input_cluster
foo$Q1 <- as.numeric(foo$Q1)
foo$Q4 <- as.numeric(foo$Q4)
foo %>%
group_by(cluster) %>%
dplyr::summarise(age = getmode(Q1), degree = getmode(Q4))
foo <- input_cluster
foo$Q1 <- as.numeric(foo$Q1)
foo$map_degree <- as.numeric(foo$Q4)
foo %>% filter(map_degree == 1)
foo %>%
group_by(cluster) %>%
dplyr::summarise(age = getmode(Q1), degree = getmode(map_degree))
input_cluster %>%
group_by(cluster) %>%
summarize(age = getmode(Q1))
get_mode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
input_cluster %>%
group_by(cluster) %>%
summarize(age = get_mode(Q1),
gender = get_mode(Q2),
country = get_mode(Q3),
degree = get_mode(Q4),
yrs_of_coding = get_mode(Q6),
yrs_of_ml = get_mode(Q15))
library(dplyr)
library(ggplot2)
library(FactoMineR)
library(factoextra)
library(foreign)
library(stats)
library(clustMixType)
library(klaR)
survey <- read.csv("kaggle_survey_2020_responses.csv")[-1, -1]
for (i in 1:(dim(survey)[2]) ) {
survey[,i] <- as.factor(survey[,i])
}
input_data <- survey %>%
dplyr::select(Q1, Q2, Q3, Q4, Q6, Q15)
mca <- MCA(input_data, ncp = 2, graph = FALSE)
fviz_mca_var(mca, choice = "mca.cor",
repel = TRUE, # Avoid text overlapping (slow)
ggtheme = theme_minimal())
foo <- input_cluster$Q4
uniqv <- unique(foo)
uniqv
uniqv[uniqv == ""] = NA
uniqv = droplevels(uniqv)
rm(foo)
rm(uniqv)
get_mode <- function(v) {
uniqv <- unique(v)
# Remove empty value
uniqv[uniqv == ""] = NA
uniqv = droplevels(uniqv)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
input_cluster %>%
group_by(cluster) %>%
summarize(age = get_mode(Q1),
gender = get_mode(Q2),
country = get_mode(Q3),
degree = get_mode(Q4),
yrs_of_coding = get_mode(Q6),
yrs_of_ml = get_mode(Q15))
unique(input_cluster$Q6)
unique(Q4)
unique(input_cluster$Q4)
input_cluster %>%
group_by(cluster) %>%
summarize(age = get_mode(Q1),
gender = get_mode(Q2),
country = get_mode(Q3),
degree = get_mode(Q4),
yrs_of_coding = get_mode(Q6),
yrs_of_ml = get_mode(Q15))
foo <- input_cluster$Q6
uniqv <- unique(foo)
uniqv
uniqv[uniqv == ""] = NA
uniqv = droplevels(uniqv)
unique(uniqv)
unique(foo)
View(foo)
View(unique(foo))
View(unique(uniqv))
uniqv = droplevels(uniqv)
View(unique(uniqv))
uniqv = drop.levels(uniqv)
uniqv <- droplevels(uniqv)
View(unique(uniqv))
install.packages("forcat")
library(forcat)
?fct_drop
install.packages("forcats")
install.packages("forcats")
library(forcats)
uniqv <- fct_drop(uniqv)
View(unique(uniqv))
uniqv <- forcats::fct_drop(uniqv)
View(unique(uniqv))
uniqv <- droplevels(uniqv, drop = TRUE)
View(unique(uniqv))
uniqv <- droplevels(uniqv, drop = FALSE)
View(unique(uniqv))
uniqv <- droplevels(uniqv, exclude = if(anyNA(levels(x))) NULL else NA)
uniqv <- droplevels(uniqv, exclude = if(anyNA(levels(uniqv))) NULL else NA)
View(unique(uniqv))
foo <- input_cluster$Q4
uniqv <- unique(foo)
uniqv[uniqv == ""] = NA
uniqv <- droplevels(uniqv)
View(unique(uniqv))
which.max(tabulate(match(v, uniqv)))
rm(foo)
rm(uniqv)
rm(getmode)
get_mode <- function(v) {
# Remove empty value
v[v == ""] = NA
v <- droplevels(uniqv)
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
input_cluster %>%
group_by(cluster) %>%
summarize(age = get_mode(Q1),
gender = get_mode(Q2),
country = get_mode(Q3),
degree = get_mode(Q4),
yrs_of_coding = get_mode(Q6),
yrs_of_ml = get_mode(Q15))
get_mode <- function(v) {
# Remove empty value
v[v == ""] = NA
v <- droplevels(v)
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
input_cluster %>%
group_by(cluster) %>%
summarize(age = get_mode(Q1),
gender = get_mode(Q2),
country = get_mode(Q3),
degree = get_mode(Q4),
yrs_of_coding = get_mode(Q6),
yrs_of_ml = get_mode(Q15))
v <- input_cluster$Q4
v[v == ""] = NA
v <- droplevels(v)
uniqv <-- unique(v)
uniqv <- unique(v)
rm(v)
rm(uniqv)
v <- input_cluster$Q1
uniqv <- unique(v)
tabulate(match(v, uniqv))
which.max(tabulate(match(v, uniqv)))
uniqv[4]
v <- input_cluster$Q4
v[v == ""] = NA
v <- droplevels(v)
tabulate(match(v, uniqv))
uniqv <- unique(v)
tabulate(match(v, uniqv))
v <- input_cluster$Q4
# Remove empty value
v <- v %>% filter(v != "")
v <- input_cluster$Q4
# Remove empty value
v <- v[v != ""]
uniqv <- unique(v)
v <- input_cluster$Q4
View(v)
v[132,]
v <- as.data.frame(v)
v <- v[v != ""]
v <- as.factor(v)
uniqv <- unique(v)
View(uniqv)
uniqv[which.max(tabulate(match(v, uniqv)))]
get_mode <- function(v) {
# Remove empty value
v <- as.data.frame(v)
v <- as.factor(v[v != ""])
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
input_cluster %>%
group_by(cluster) %>%
summarize(age = get_mode(Q1),
gender = get_mode(Q2),
country = get_mode(Q3),
degree = get_mode(Q4),
yrs_of_coding = get_mode(Q6),
yrs_of_ml = get_mode(Q15))
v <- input_cluster$Q6
# Remove empty value
v <- as.data.frame(v)
v <- as.factor(v[v != ""])
uniqv <- unique(v)
View(uniqv)
tabulate(match(v, uniqv))
which.max(tabulate(match(v, uniqv)))
uniqv[3]
input_cluster %>%
group_by(cluster) %>%
summarize(age = get_mode(Q1),
gender = get_mode(Q2),
country = get_mode(Q3),
degree = get_mode(Q4),
yrs_of_coding = get_mode(Q6),
yrs_of_ml = get_mode(Q15))
v <- input_cluster %>% filter(cluster == 4) %>% select(Q6)
v <- input_cluster %>% filter(cluster == 4) %>% dplyr::select(Q6)
View(v)
set.seed(2020)
kmeans <- kmeans(mca$ind$coord, centers = 3, nstart = 20)
cluster <- as.factor(kmeans$cluster)
input_cluster <- cbind(input_data, mca$ind$coord, cluster)
ggplot(input_cluster, aes(`Dim 1`, `Dim 2`, color = cluster)) + geom_point()
get_mode <- function(v) {
# Remove empty value
v <- as.data.frame(v)
v <- as.factor(v[v != ""])
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
input_cluster %>%
group_by(cluster) %>%
summarize(age = get_mode(Q1),
gender = get_mode(Q2),
country = get_mode(Q3),
degree = get_mode(Q4),
yrs_of_coding = get_mode(Q6),
yrs_of_ml = get_mode(Q15))
fviz_mca_var(mca, choice = "mca.cor",
repel = TRUE, # Avoid text overlapping (slow)
ggtheme = theme_minimal())
set.seed(2020)
kmeans <- kmeans(mca$ind$coord, centers = 4, nstart = 20)
cluster <- as.factor(kmeans$cluster)
input_cluster <- cbind(input_data, mca$ind$coord, cluster)
ggplot(input_cluster, aes(`Dim 1`, `Dim 2`, color = cluster)) + geom_point()
get_mode <- function(v) {
# Remove empty value
v <- as.data.frame(v)
v <- as.factor(v[v != ""])
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
input_cluster %>%
group_by(cluster) %>%
summarize(age = get_mode(Q1),
gender = get_mode(Q2),
country = get_mode(Q3),
degree = get_mode(Q4),
yrs_of_coding = get_mode(Q6),
yrs_of_ml = get_mode(Q15))
unique(input_cluster$Q2)
get_mode <- function(v) {
# Remove empty value
v <- as.data.frame(v)
v <- as.factor(v[v != ""])
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
input_cluster %>%
group_by(cluster) %>%
filter(Q2 == "Man") %>%
summarize(age = get_mode(Q1),
gender = get_mode(Q2),
country = get_mode(Q3),
degree = get_mode(Q4),
yrs_of_coding = get_mode(Q6),
yrs_of_ml = get_mode(Q15))
input_cluster %>%
group_by(cluster) %>%
filter(Q2 == "Woman") %>%
summarize(age = get_mode(Q1),
gender = get_mode(Q2),
country = get_mode(Q3),
degree = get_mode(Q4),
yrs_of_coding = get_mode(Q6),
yrs_of_ml = get_mode(Q15))
get_mode <- function(v) {
# Remove empty value
v <- as.data.frame(v)
v <- as.factor(v[v != ""])
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
input_cluster %>%
filter(Q2 == "Man") %>%
group_by(cluster) %>%
summarize(age = get_mode(Q1),
gender = get_mode(Q2),
country = get_mode(Q3),
degree = get_mode(Q4),
yrs_of_coding = get_mode(Q6),
yrs_of_ml = get_mode(Q15))
input_cluster %>%
filter(Q2 == "Woman") %>%
group_by(cluster) %>%
summarize(age = get_mode(Q1),
gender = get_mode(Q2),
country = get_mode(Q3),
degree = get_mode(Q4),
yrs_of_coding = get_mode(Q6),
yrs_of_ml = get_mode(Q15))
input_cluster %>%
group_by(cluster) %>%
summarize(count = n())
input_cluster %>%
group_by(cluster) %>%
summarize(age = get_mode(Q1),
country = get_mode(Q3),
degree = get_mode(Q4),
yrs_of_coding = get_mode(Q6),
yrs_of_ml = get_mode(Q15))
input_cluster %>%
group_by(cluster) %>%
summarize(count = n())
library(dplyr)
library(forcats)
library(ggplot2)
library(FactoMineR)
library(factoextra)
library(foreign)
library(stats)
library(clustMixType)
library(klaR)
survey <- read.csv("kaggle_survey_2020_responses.csv")[-1, -1]
for (i in 1:(dim(survey)[2]) ) {
survey[,i] <- as.factor(survey[,i])
}
input_data <- survey %>%
dplyr::select(Q1, Q2, Q3, Q4, Q6, Q15)
mca <- MCA(input_data, ncp = 2, graph = FALSE)
fviz_mca_var(mca, choice = "mca.cor",
repel = TRUE, # Avoid text overlapping (slow)
ggtheme = theme_minimal())
set.seed(2020)
kmeans <- kmeans(mca$ind$coord, centers = 3, nstart = 20)
cluster <- as.factor(kmeans$cluster)
input_cluster <- cbind(input_data, mca$ind$coord, cluster)
ggplot(input_cluster, aes(`Dim 1`, `Dim 2`, color = cluster)) + geom_point()
get_mode <- function(v) {
# Remove empty value
v <- as.data.frame(v)
v <- as.factor(v[v != ""])
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
input_cluster %>%
group_by(cluster) %>%
summarize(age = get_mode(Q1),
country = get_mode(Q3),
degree = get_mode(Q4),
yrs_of_coding = get_mode(Q6),
yrs_of_ml = get_mode(Q15))
input_cluster %>%
group_by(cluster) %>%
summarize(count = n())
